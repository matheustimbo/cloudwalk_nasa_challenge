// Mocks generated by Mockito 5.4.4 from annotations
// in cloudwalk_nasa_challenge/test/app/presentation/pages/nasa_apods_list_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloudwalk_nasa_challenge/app/data/models/nasa_apod.dart' as _i7;
import 'package:cloudwalk_nasa_challenge/app/domain/entities/date_range.dart'
    as _i8;
import 'package:cloudwalk_nasa_challenge/app/domain/repositories/nasa_apod_repository.dart'
    as _i2;
import 'package:cloudwalk_nasa_challenge/app/domain/usecases/get_nasa_apods_from_date_range_usecase.dart'
    as _i4;
import 'package:cloudwalk_nasa_challenge/shared/failures/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNasaApodRepository_0 extends _i1.SmartFake
    implements _i2.NasaApodRepository {
  _FakeNasaApodRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetNasaApodsFromDateRangeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNasaApodsFromDateRangeUseCase extends _i1.Mock
    implements _i4.GetNasaApodsFromDateRangeUseCase {
  @override
  _i2.NasaApodRepository get nasaApodRepository => (super.noSuchMethod(
        Invocation.getter(#nasaApodRepository),
        returnValue: _FakeNasaApodRepository_0(
          this,
          Invocation.getter(#nasaApodRepository),
        ),
        returnValueForMissingStub: _FakeNasaApodRepository_0(
          this,
          Invocation.getter(#nasaApodRepository),
        ),
      ) as _i2.NasaApodRepository);

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.NasaApod>>> call(
          _i8.DateRange? param) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [param],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.NasaApod>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.NasaApod>>(
          this,
          Invocation.method(
            #call,
            [param],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i6.Failure, List<_i7.NasaApod>>>.value(
                _FakeEither_1<_i6.Failure, List<_i7.NasaApod>>(
          this,
          Invocation.method(
            #call,
            [param],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.NasaApod>>>);
}
