// Mocks generated by Mockito 5.4.4 from annotations
// in cloudwalk_nasa_challenge/test/app/domain/usecases/get_nasa_apods_from_date_range_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloudwalk_nasa_challenge/app/data/models/nasa_apod.dart' as _i6;
import 'package:cloudwalk_nasa_challenge/app/domain/repositories/nasa_apod_repository.dart'
    as _i3;
import 'package:cloudwalk_nasa_challenge/shared/failures/failure.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NasaApodRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNasaApodRepository extends _i1.Mock
    implements _i3.NasaApodRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.NasaApod>>>
      getNasaApodsFromDateRange(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getNasaApodsFromDateRange,
              [
                startDate,
                endDate,
              ],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.NasaApod>>>.value(
                    _FakeEither_0<_i5.Failure, List<_i6.NasaApod>>(
              this,
              Invocation.method(
                #getNasaApodsFromDateRange,
                [
                  startDate,
                  endDate,
                ],
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.NasaApod>>>.value(
                    _FakeEither_0<_i5.Failure, List<_i6.NasaApod>>(
              this,
              Invocation.method(
                #getNasaApodsFromDateRange,
                [
                  startDate,
                  endDate,
                ],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.NasaApod>>>);
}
